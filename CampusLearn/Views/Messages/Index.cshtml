@model CampusLearn.Models.MessageView
@{
    ViewData["Title"] = "People Directory";

    // Split users by role
    var students = Model.AllUsers.Where(u => u.Role == "Student").ToList();
    var tutors = Model.AllUsers.Where(u => u.Role == "Tutor").ToList();
    var admins = Model.AllUsers.Where(u => u.Role == "Admin").ToList();
}

<div class="dir">
    <header class="dir__header">
        <h2>@ViewData["Title"]</h2>
        <div class="dir__hint">Click “Message” to open an inline chat under that person.</div>
    </header>

    <!-- Tabs -->
    <nav class="dir__tabs" role="tablist" aria-label="People tabs">
        <button id="tabbtn-students" class="dir__tab is-active" data-target="#tab-students" role="tab" aria-selected="true" type="button">
            Students (@students.Count)
        </button>
        <button id="tabbtn-tutors" class="dir__tab" data-target="#tab-tutors" role="tab" aria-selected="false" type="button">
            Tutors (@tutors.Count)
        </button>
        <button id="tabbtn-admins" class="dir__tab" data-target="#tab-admins" role="tab" aria-selected="false" type="button">
            Admins (@admins.Count)
        </button>
    </nav>

    <!-- Students -->
    <section id="tab-students" class="dir__pane is-active" role="tabpanel" aria-labelledby="tabbtn-students">
        @if (students.Any())
        {
            <div class="dir__tablewrap">
                <table class="dir__table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Surname</th>
                            <th>ID</th>
                            <th>Phone</th>
                            <th>Email</th>
                            <th class="dir__actioncol">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in students)
                        {
                            <tr>
                                <td data-label="Name">@user.FirstName</td>
                                <td data-label="Surname">@user.LastName</td>
                                <td data-label="ID">@user.Id</td>
                                <td data-label="Phone">@((string.IsNullOrWhiteSpace(user.PhoneNumber) ? "-" : user.PhoneNumber))</td>
                                <td data-label="Email">@((string.IsNullOrWhiteSpace(user.Email) ? "-" : user.Email))</td>
                                <td class="dir__actioncol">
                                    <button class="btn btn--primary" type="button" onclick="toggleThread(@user.Id)">💬 Message</button>
                                </td>
                            </tr>
                            <tr id="thread-row-@user.Id" class="thread-row" style="display:none;">
                                <td colspan="6">
                                    <div id="thread-slot-@user.Id" class="thread-slot"></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="dir__empty">No students found.</div>
        }
    </section>

    <!-- Tutors -->
    <section id="tab-tutors" class="dir__pane" role="tabpanel" aria-labelledby="tabbtn-tutors" hidden>
        @if (tutors.Any())
        {
            <div class="dir__tablewrap">
                <table class="dir__table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Surname</th>
                            <th>ID</th>
                            <th>Phone</th>
                            <th>Email</th>
                            <th class="dir__actioncol">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in tutors)
                        {
                            <tr>
                                <td data-label="Name">@user.FirstName</td>
                                <td data-label="Surname">@user.LastName</td>
                                <td data-label="ID">@user.Id</td>
                                <td data-label="Phone">@((string.IsNullOrWhiteSpace(user.PhoneNumber) ? "-" : user.PhoneNumber))</td>
                                <td data-label="Email">@((string.IsNullOrWhiteSpace(user.Email) ? "-" : user.Email))</td>
                                <td class="dir__actioncol">
                                    <button class="btn btn--primary" type="button" onclick="toggleThread(@user.Id)">💬 Message</button>
                                </td>
                            </tr>
                            <tr id="thread-row-@user.Id" class="thread-row" style="display:none;">
                                <td colspan="6">
                                    <div id="thread-slot-@user.Id" class="thread-slot"></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="dir__empty">No tutors found.</div>
        }
    </section>

    <!-- Admins -->
    <section id="tab-admins" class="dir__pane" role="tabpanel" aria-labelledby="tabbtn-admins" hidden>
        @if (admins.Any())
        {
            <div class="dir__tablewrap">
                <table class="dir__table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Surname</th>
                            <th>ID</th>
                            <th>Phone</th>
                            <th>Email</th>
                            <th class="dir__actioncol">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in admins)
                        {
                            <tr>
                                <td data-label="Name">@user.FirstName</td>
                                <td data-label="Surname">@user.LastName</td>
                                <td data-label="ID">@user.Id</td>
                                <td data-label="Phone">@((string.IsNullOrWhiteSpace(user.PhoneNumber) ? "-" : user.PhoneNumber))</td>
                                <td data-label="Email">@((string.IsNullOrWhiteSpace(user.Email) ? "-" : user.Email))</td>
                                <td class="dir__actioncol">
                                    <button class="btn btn--primary" type="button" onclick="toggleThread(@user.Id)">💬 Message</button>
                                </td>
                            </tr>
                            <tr id="thread-row-@user.Id" class="thread-row" style="display:none;">
                                <td colspan="6">
                                    <div id="thread-slot-@user.Id" class="thread-slot"></div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="dir__empty">No admins found.</div>
        }
    </section>
</div>

@section Scripts {
    <script>
        // ---------------------------
        // TAB SWITCHING
        // ---------------------------
        document.addEventListener('click', function (e) {
          const btn = e.target.closest('.dir__tab');
          if (!btn) return;

          // deactivate all tabs
          const tabs = btn.parentElement.querySelectorAll('.dir__tab');
          tabs.forEach(t => {
            t.classList.remove('is-active');
            t.setAttribute('aria-selected', 'false');
          });

          // hide all panes
          document.querySelectorAll('.dir__pane').forEach(p => {
            p.classList.remove('is-active');
            p.hidden = true;
          });

          // activate clicked tab
          btn.classList.add('is-active');
          btn.setAttribute('aria-selected', 'true');

          // show target pane
          const target = document.querySelector(btn.dataset.target);
          if (target) {
            target.hidden = false;
            target.classList.add('is-active');
          }
        });

        // ---------------------------
        // INLINE CHAT HELPERS
        // ---------------------------
        async function toggleThread(userId) {
          const row  = document.getElementById(`thread-row-${userId}`);
          const slot = document.getElementById(`thread-slot-${userId}`);

          // Close if already open
          if (row && row.style.display !== 'none') {
            closeInlineThread(userId);
            return;
          }

          // Close others
          document.querySelectorAll('.thread-row').forEach(r => r.style.display = 'none');
          document.querySelectorAll('.thread-slot').forEach(s => s.innerHTML = '');

          // Load partial
          row.style.display = '';
          slot.innerHTML = '<div class="p-3 text-muted">Loading…</div>';
          try {
            const res  = await fetch(`/Messages/Thread?id=${userId}`, {
              headers: { 'X-Requested-With': 'XMLHttpRequest' }
            });
            const html = await res.text();
            slot.innerHTML = html;

            // scroll to bottom
            const hist = slot.querySelector('.inline-chat__history');
            if (hist) hist.scrollTop = hist.scrollHeight;
          } catch {
            slot.innerHTML = '<div class="text-danger">Failed to load chat.</div>';
          }
        }

        function closeInlineThread(userId) {
          const row  = document.getElementById(`thread-row-${userId}`);
          const slot = document.getElementById(`thread-slot-${userId}`);
          if (row)  row.style.display = 'none';
          if (slot) slot.innerHTML = '';
        }

        // Handle inline composer submit (PJAX style refresh of the thread partial)
        document.addEventListener('submit', async function (e) {
          const form = e.target.closest('form.inline-chat__composer');
          if (!form) return;   // not our chat form

          e.preventDefault();  // stop normal navigation

          const container = form.closest('.thread-slot'); // where partial lives
          const fd = new FormData(form);

          try {
            const res = await fetch(form.action, {
              method: 'POST',
              body: fd,
              headers: { 'X-Requested-With': 'XMLHttpRequest' }
            });
            const html = await res.text();
            container.innerHTML = html; // replace with refreshed partial

            const hist = container.querySelector('.inline-chat__history');
            if (hist) hist.scrollTop = hist.scrollHeight;
          } catch {
            // optional error UI
          }
        });
    </script>
}

<style>
    .btn--ghost {
        background: transparent;
        border: 1px solid #e5e7eb;
        color: #374151
    }

        .btn--ghost:hover {
            background: #f9fafb
        }

    .dir {
        --bg: #ffffff;
        --muted: #6b7280;
        --border: #e5e7eb;
        --primary: #2563eb;
        --primary-contrast: #ffffff;
        background: var(--bg);
        border-radius: 12px;
        box-shadow: 0 8px 24px rgba(0,0,0,.06);
        padding: 24px;
        max-width: 1200px;
        margin: 24px auto;
        font-family: system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif;
    }

    .dir__header {
        display: flex;
        align-items: baseline;
        justify-content: space-between;
        margin-bottom: 12px;
    }

    .dir__hint {
        color: var(--muted);
        font-size: .9rem;
    }

    /* tabs */
    .dir__tabs {
        display: flex;
        gap: 8px;
        border-bottom: 1px solid var(--border);
        margin-bottom: 16px;
    }

    .dir__tab {
        border: 1px solid var(--border);
        border-bottom: none;
        background: #f8fafc;
        color: #111827;
        padding: 8px 14px;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
        cursor: pointer;
        font-weight: 600;
    }

        .dir__tab.is-active {
            background: #fff;
            border-color: var(--border);
            border-bottom: 1px solid #fff;
        }

    .dir__pane {
        padding-top: 12px;
    }

    /* table */
    .dir__tablewrap {
        overflow-x: auto;
    }

    .dir__table {
        width: 100%;
        border-collapse: collapse;
        font-size: 14px;
    }

        .dir__table thead th {
            text-align: left;
            padding: 10px 12px;
            border-bottom: 1px solid var(--border);
            position: sticky;
            top: 0;
            background: #f9fafb;
            z-index: 1;
        }

        .dir__table tbody td {
            padding: 10px 12px;
            border-bottom: 1px solid var(--border);
            vertical-align: middle;
        }

        .dir__table tbody tr:hover {
            background: #f9fbff;
        }

    .dir__actioncol {
        width: 120px;
        text-align: right;
    }

    /* inline thread row */
    .thread-row td {
        background: #fcfcfd;
    }

    .thread-slot {
        padding: 12px 6px;
    }

    /* buttons */
    .btn {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        padding: 6px 10px;
        border-radius: 8px;
        border: 1px solid transparent;
        text-decoration: none;
        font-weight: 600;
        font-size: 13px;
        cursor: pointer;
        transition: transform .02s ease, box-shadow .2s ease, background .2s ease;
    }

    .btn--primary {
        background: var(--primary);
        color: var(--primary-contrast);
    }

        .btn--primary:hover {
            box-shadow: 0 6px 14px rgba(37, 99, 235, .25);
            transform: translateY(-1px);
        }

    /* empty state */
    .dir__empty {
        padding: 16px;
        color: var(--muted);
        border: 1px dashed var(--border);
        border-radius: 10px;
        background: #fafafa;
    }
</style>
